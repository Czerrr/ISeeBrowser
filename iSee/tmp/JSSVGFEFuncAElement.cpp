/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
*/

#include "config.h"


#if ENABLE(SVG) && ENABLE(SVG_FILTERS)

#include "Document.h"
#include "Frame.h"
#include "SVGDocumentExtensions.h"
#include "SVGElement.h"
#include "SVGAnimatedTemplate.h"
#include "JSSVGFEFuncAElement.h"

#include <wtf/GetPtr.h>

#include "SVGFEFuncAElement.h"


using namespace JSC;

namespace WebCore {

ASSERT_CLASS_FITS_IN_CELL(JSSVGFEFuncAElement)

/* Hash table for prototype */

static const HashTableValue JSSVGFEFuncAElementPrototypeTableValues[1] =
{
    { 0, 0, 0, 0 }
};

static const HashTable JSSVGFEFuncAElementPrototypeTable = { 0, JSSVGFEFuncAElementPrototypeTableValues, 0 };

const ClassInfo JSSVGFEFuncAElementPrototype::s_info = { "SVGFEFuncAElementPrototype", 0, &JSSVGFEFuncAElementPrototypeTable, 0 };

JSObject* JSSVGFEFuncAElementPrototype::self(ExecState* exec)
{
    static const Identifier* prototypeIdentifier = new Identifier(exec, "[[JSSVGFEFuncAElement.prototype]]");
    return JSC::cacheGlobalObject<JSSVGFEFuncAElementPrototype>(exec, *prototypeIdentifier);
}

const ClassInfo JSSVGFEFuncAElement::s_info = { "SVGFEFuncAElement", &JSSVGComponentTransferFunctionElement::s_info, 0 , 0 };

JSSVGFEFuncAElement::JSSVGFEFuncAElement(JSObject* prototype, SVGFEFuncAElement* impl)
    : JSSVGComponentTransferFunctionElement(prototype, impl)
{
}


}

#endif // ENABLE(SVG) && ENABLE(SVG_FILTERS)
