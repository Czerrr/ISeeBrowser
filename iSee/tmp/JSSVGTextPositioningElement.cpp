/*
    This file is part of the WebKit open source project.
    This file has been generated by generate-bindings.pl. DO NOT MODIFY!

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public
    License as published by the Free Software Foundation; either
    version 2 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.

    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
*/

#include "config.h"


#if ENABLE(SVG)

#include "Document.h"
#include "Frame.h"
#include "SVGDocumentExtensions.h"
#include "SVGElement.h"
#include "SVGAnimatedTemplate.h"
#include "JSSVGTextPositioningElement.h"

#include <wtf/GetPtr.h>

#include "JSSVGAnimatedLengthList.h"
#include "JSSVGAnimatedNumberList.h"
#include "SVGTextPositioningElement.h"


using namespace JSC;

namespace WebCore {

ASSERT_CLASS_FITS_IN_CELL(JSSVGTextPositioningElement)

/* Hash table */

static const HashTableValue JSSVGTextPositioningElementTableValues[6] =
{
    { "x", (intptr_t)JSSVGTextPositioningElement::XAttrNum, DontDelete|ReadOnly, 0 },
    { "y", (intptr_t)JSSVGTextPositioningElement::YAttrNum, DontDelete|ReadOnly, 0 },
    { "dx", (intptr_t)JSSVGTextPositioningElement::DxAttrNum, DontDelete|ReadOnly, 0 },
    { "dy", (intptr_t)JSSVGTextPositioningElement::DyAttrNum, DontDelete|ReadOnly, 0 },
    { "rotate", (intptr_t)JSSVGTextPositioningElement::RotateAttrNum, DontDelete|ReadOnly, 0 },
    { 0, 0, 0, 0 }
};

static const HashTable JSSVGTextPositioningElementTable = { 15, JSSVGTextPositioningElementTableValues, 0 };

/* Hash table for prototype */

static const HashTableValue JSSVGTextPositioningElementPrototypeTableValues[1] =
{
    { 0, 0, 0, 0 }
};

static const HashTable JSSVGTextPositioningElementPrototypeTable = { 0, JSSVGTextPositioningElementPrototypeTableValues, 0 };

const ClassInfo JSSVGTextPositioningElementPrototype::s_info = { "SVGTextPositioningElementPrototype", 0, &JSSVGTextPositioningElementPrototypeTable, 0 };

JSObject* JSSVGTextPositioningElementPrototype::self(ExecState* exec)
{
    static const Identifier* prototypeIdentifier = new Identifier(exec, "[[JSSVGTextPositioningElement.prototype]]");
    return JSC::cacheGlobalObject<JSSVGTextPositioningElementPrototype>(exec, *prototypeIdentifier);
}

const ClassInfo JSSVGTextPositioningElement::s_info = { "SVGTextPositioningElement", &JSSVGTextContentElement::s_info, &JSSVGTextPositioningElementTable , 0 };

JSSVGTextPositioningElement::JSSVGTextPositioningElement(JSObject* prototype, SVGTextPositioningElement* impl)
    : JSSVGTextContentElement(prototype, impl)
{
}

bool JSSVGTextPositioningElement::getOwnPropertySlot(ExecState* exec, const Identifier& propertyName, PropertySlot& slot)
{
    return getStaticValueSlot<JSSVGTextPositioningElement, Base>(exec, &JSSVGTextPositioningElementTable, this, propertyName, slot);
}

JSValue* JSSVGTextPositioningElement::getValueProperty(ExecState* exec, int token) const
{
    switch (token) {
    case XAttrNum: {
        SVGTextPositioningElement* imp = static_cast<SVGTextPositioningElement*>(impl());
        RefPtr<SVGAnimatedLengthList> obj = imp->xAnimated();
        return toJS(exec, obj.get(), imp);
    }
    case YAttrNum: {
        SVGTextPositioningElement* imp = static_cast<SVGTextPositioningElement*>(impl());
        RefPtr<SVGAnimatedLengthList> obj = imp->yAnimated();
        return toJS(exec, obj.get(), imp);
    }
    case DxAttrNum: {
        SVGTextPositioningElement* imp = static_cast<SVGTextPositioningElement*>(impl());
        RefPtr<SVGAnimatedLengthList> obj = imp->dxAnimated();
        return toJS(exec, obj.get(), imp);
    }
    case DyAttrNum: {
        SVGTextPositioningElement* imp = static_cast<SVGTextPositioningElement*>(impl());
        RefPtr<SVGAnimatedLengthList> obj = imp->dyAnimated();
        return toJS(exec, obj.get(), imp);
    }
    case RotateAttrNum: {
        SVGTextPositioningElement* imp = static_cast<SVGTextPositioningElement*>(impl());
        RefPtr<SVGAnimatedNumberList> obj = imp->rotateAnimated();
        return toJS(exec, obj.get(), imp);
    }
    }
    return 0;
}


}

#endif // ENABLE(SVG)
